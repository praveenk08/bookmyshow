CREATE DATABASE BookMyShow;
USE BookMyShow;

-- Users Table
CREATE TABLE Users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(15) NOT NULL,
    password VARCHAR(255) NOT NULL
);

-- Movies Table
CREATE TABLE Movies (
    movie_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    genre VARCHAR(50),
    duration INT, -- Duration in minutes
    language VARCHAR(50),
    release_date DATE
);

-- Theatres Table
CREATE TABLE Theatres (
    theatre_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    total_screens INT
);

-- Sample Users
INSERT INTO Users (name, email, phone, password) VALUES
('Amit Sharma', 'amit@example.com', '9876543210', 'password123'),
('Priya Singh', 'priya@example.com', '8765432109', 'password456');

-- Sample Movies
INSERT INTO Movies (title, genre, duration, language, release_date) VALUES
('Pathaan', 'Action', 150, 'Hindi', '2023-01-25'),
('Avatar 2', 'Sci-Fi', 180, 'English', '2022-12-16');

-- Sample Theatres
INSERT INTO Theatres (name, location, total_screens) VALUES
('PVR Cinemas', 'Delhi', 5),
('INOX', 'Mumbai', 6);

-- Sample Shows
INSERT INTO Shows (movie_id, theatre_id, show_time, screen_number, ticket_price) VALUES
(1, 1, '2024-04-15 18:00:00', 3, 250.00),
(2, 2, '2024-04-16 20:00:00', 4, 300.00);

-- Sample Seats
INSERT INTO Seats (show_id, seat_number, status) VALUES
(1, 'A1', 'Available'),
(1, 'A2', 'Available'),
(2, 'B1', 'Available'),
(2, 'B2', 'Booked');

-- Shows Table (Movie Shows in Theatres)
CREATE TABLE Shows (
    show_id INT PRIMARY KEY AUTO_INCREMENT,
    movie_id INT,
    theatre_id INT,
    show_time DATETIME,
    screen_number INT,
    ticket_price DECIMAL(10,2),
    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id),
    FOREIGN KEY (theatre_id) REFERENCES Theatres(theatre_id)
);

-- Seats Table
CREATE TABLE Seats (
    seat_id INT PRIMARY KEY AUTO_INCREMENT,
    show_id INT,
    seat_number VARCHAR(10),
    status ENUM('Available', 'Booked'),
    FOREIGN KEY (show_id) REFERENCES Shows(show_id)
);

-- Bookings Table
CREATE TABLE Bookings (
    booking_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    show_id INT,
    seat_id INT,
    booking_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_amount DECIMAL(10,2),
    status ENUM('Pending', 'Confirmed', 'Cancelled'),
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (show_id) REFERENCES Shows(show_id),
    FOREIGN KEY (seat_id) REFERENCES Seats(seat_id)
);

-- Payments Table
CREATE TABLE Payments (
    payment_id INT PRIMARY KEY AUTO_INCREMENT,
    booking_id INT,
    user_id INT,
    payment_status ENUM('Success', 'Failed', 'Pending'),
    payment_method VARCHAR(50),
    amount DECIMAL(10,2),
    payment_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (booking_id) REFERENCES Bookings(booking_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Sample Users
INSERT INTO Users (name, email, phone, password) VALUES
('Amit Sharma', 'amit@example.com', '9876543210', 'password123'),
('Priya Singh', 'priya@example.com', '8765432109', 'password456');

-- Sample Movies
INSERT INTO Movies (title, genre, duration, language, release_date) VALUES
('Pathaan', 'Action', 150, 'Hindi', '2023-01-25'),
('Avatar 2', 'Sci-Fi', 180, 'English', '2022-12-16');

-- Sample Theatres
INSERT INTO Theatres (name, location, total_screens) VALUES
('PVR Cinemas', 'Delhi', 5),
('INOX', 'Mumbai', 6);

-- Sample Shows
INSERT INTO Shows (movie_id, theatre_id, show_time, screen_number, ticket_price) VALUES
(1, 1, '2024-04-15 18:00:00', 3, 250.00),
(2, 2, '2024-04-16 20:00:00', 4, 300.00);

-- Sample Seats
INSERT INTO Seats (show_id, seat_number, status) VALUES
(1, 'A1', 'Available'),
(1, 'A2', 'Available'),
(2, 'B1', 'Available'),
(2, 'B2', 'Booked');

-- Sample Booking
INSERT INTO Bookings (user_id, show_id, seat_id, total_amount, status) VALUES
(1, 1, 1, 250.00, 'Confirmed');

-- Sample Payment
INSERT INTO Payments (booking_id, user_id, payment_status, payment_method, amount) VALUES
(1, 1, 'Success', 'Credit Card', 250.00);


## List of Available Movies
SELECT movie_id, title, genre, duration, language, release_date 
FROM Movies;


## Available Shows for a Movie
SELECT s.show_id, t.name AS theatre_name, s.show_time, s.screen_number, s.ticket_price 
FROM Shows s 
JOIN Theatres t ON s.theatre_id = t.theatre_id 
WHERE s.movie_id = 1;


## Check Available Seats for a Show
SELECT seat_number, status FROM Seats WHERE show_id = 1;

## Book a Seat
UPDATE Seats SET status = 'Booked' WHERE seat_id = 1;
 
##Cancel Booking
UPDATE Bookings SET status = 'Cancelled' WHERE booking_id = 1;
UPDATE Seats SET status = 'Available' WHERE seat_id = 1;

